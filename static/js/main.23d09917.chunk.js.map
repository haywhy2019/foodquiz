{"version":3,"sources":["utils/QuestionGenerator.js","components/QuestionOption.js","components/Question.js","components/Result.js","components/Quiz.js","index.js"],"names":["QuestionGenerator","count","question","option","Answer","sort","Math","random","slice","QuestionOption","props","optionValue","value","className","onClick","scoreQuestion","type","Question","questionBody","content","map","i","key","Result","score","Quiz","state","questionList","questionIndex","showContent","bind","this","length","console","log","setState","Component","ReactDom","render","document","getElementById"],"mappings":"sOAiDgBA,MAjDf,WAAuC,IAAZC,EAAW,uDAAH,EAyCpC,MAtCkB,CACd,CACIC,SAAU,4DACVC,OAAQ,CAAC,QAAS,UAAW,UAAW,OACxCC,OAAQ,SAEZ,CACIF,SAAU,mCACVC,OAAQ,CAAC,SAAU,UAAW,OAAQ,QACtCC,OAAQ,WAEZ,CACIF,SAAU,4GACVC,OAAQ,CAAC,aAAc,UAAW,aAAc,YAChDC,OAAQ,cAEZ,CACIF,SAAU,4CACVC,OAAQ,CAAC,MAAO,QAAS,UAAW,SACpCC,OAAQ,SAEZ,CACIF,SAAU,qGACVC,OAAQ,CAAC,OAAQ,MAAO,UAAW,WACnCC,OAAQ,WAEZ,CACIF,SAAU,kCACVC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,QACjCC,OAAQ,QAEZ,CACIF,SAAU,kDACVC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,QACjCC,OAAQ,SAKFC,MAAK,WAAW,OAAQC,KAAKC,SAAWD,KAAKC,YAAYC,MAAM,EAAGP,I,KC3BjEQ,MAZf,SAAwBC,GACpB,IAAIC,EAAcD,EAAME,MAExB,OACI,yBAAKC,UAAU,QAAQC,QAAS,kBAAKJ,EAAMK,cAAcL,EAAME,SAE3D,gCAAK,2BAAOI,KAAM,UAAUL,KCSzBM,MAdf,SAAkBP,GAClB,IAAIQ,EAAeR,EAAMS,QAMrB,OACI,6BACI,2BAAID,EAAahB,UALlBgB,EAAaf,OAAOiB,KAAI,SAACjB,EAAQkB,GAAT,OAAe,kBAAC,EAAD,CAAgBT,MAAOT,EAAQmB,IAAOD,EAAGN,cAAeL,EAAMK,qBCEjGQ,MARf,SAAgBb,GACZ,OACI,6BACKA,EAAMc,Q,6jBC+DJC,E,YA1DX,aAAc,IAAD,8BACT,+CACKC,MAAM,CACPC,aAAc3B,IACd4B,cAAe,EACfJ,MAAM,GAEV,EAAKK,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKf,cAAgB,EAAKA,cAAce,KAAnB,gBARZ,E,2EAaT,OAAGC,KAAKL,MAAME,cAAeG,KAAKL,MAAMC,aAAaK,OAC3C,kBAAC,EAAD,CAAUb,QAAWY,KAAKL,MAAMC,aAAaI,KAAKL,MAAME,eAAgBb,cAAegB,KAAKhB,gBAGlG,kBAAC,EAAD,CAAQS,MAAQO,KAAKL,MAAMF,U,oCAKrBZ,GACVqB,QAAQC,IAAI,WAAYtB,GAIxB,IAAIV,EAAW6B,KAAKL,MAAMC,aAAaI,KAAKL,MAAME,eAClDG,KAAKI,UAAS,SAACT,GACX,YAAUA,EAAME,oBAGhBhB,GAAQV,EAASE,QACjB2B,KAAKI,UAAS,SAACT,GACX,YAAUA,EAAMF,c,+BAUxB,OACI,yBAAKX,UAAU,SACX,yBAAKA,UAAU,WAGnB,yBAAKA,UAAU,YACX,gDACCkB,KAAKF,qB,GApDHO,aCLnBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.23d09917.chunk.js","sourcesContent":[" function QuestionGenerator(count = 5) {\r\n\r\n\r\nconst questions = [\r\n    {\r\n        question: \"The rice dish ‘paella’ comes from what country?\",\r\n        option: [\"Spain\", \"Nigeria\", \"Germany\", \"USA\"],\r\n        Answer: \"Spain\"\r\n    },\r\n    {\r\n        question: \"Deer meat is known by what name?\",\r\n        option: [\"Mutton\", \"Venison\", \"Pork\", \"Meat\"],\r\n        Answer: \"Venison\"\r\n    },\r\n    {\r\n        question: \"The range of vegetables, fruits, meats, nuts, grains, herbs and spices used in cooking are known as what?\",\r\n        option: [\"Ingredient\", \"Mixture\", \"Condiments\", \"Assorted\"],\r\n        Answer: \"Ingredient\"\r\n    },\r\n    {\r\n        question: \"What is the sweet substance made by bees?\",\r\n        option: [\"Jam\", \"Sugar\", \"Flowers\", \"Honey\"],\r\n        Answer: \"Honey\"\r\n    },\r\n    {\r\n        question: \"Lures, reels, rods, hooks, baits and nets are common equipment used in what food gathering method?\",\r\n        option: [\"None\", \"All\", \"Fishing\", \"Hunting\"],\r\n        Answer: \"Fishing\"\r\n    },\r\n    {\r\n        question: \"What is another name for maize?\",\r\n        option: [\"Pine\", \"Cone\", \"Corn\", \"Maze\"],\r\n        Answer: \"Corn\"\r\n    },\r\n    {\r\n        question: \"Do coconut grow better in warm or cold climate?\",\r\n        option: [\"Warm\", \"Cold\", \"Both\", \"None\"],\r\n        Answer: \"Warm\"\r\n    },\r\n]\r\n\r\nreturn(\r\n    questions.sort(function(){return (Math.random() - Math.random())}).slice(0, count)\r\n\r\n)\r\n }\r\n\r\n\r\n\r\n export default QuestionGenerator;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction QuestionOption(props){\r\n    let optionValue = props.value;\r\n\r\n    return(\r\n        <div className=\"radio\" onClick={()=> props.scoreQuestion(props.value)}>\r\n          \r\n            <p>  <input type ='radio'/>{optionValue}</p>\r\n        </div>\r\n    )\r\n       \r\n    \r\n}\r\nexport default QuestionOption;","import React from 'react';\r\nimport QuestionOption from './QuestionOption';\r\n\r\n\r\nfunction Question(props){\r\nlet questionBody = props.content;\r\n\r\nconst showOptions = () =>{\r\n    return questionBody.option.map((option, i) => <QuestionOption value={option} key = {i} scoreQuestion={props.scoreQuestion}/>)\r\n}\r\n\r\n    return(\r\n        <div>\r\n            <p>{questionBody.question}</p>\r\n            {showOptions()}\r\n        </div>\r\n    )\r\n}\r\nexport default Question;","import React from 'react';\r\n\r\nfunction Result(props){ \r\n    return(\r\n        <div>\r\n            {props.score}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","import React, {Component} from 'react';\r\nimport QuestionGenerator from \"../utils/QuestionGenerator\";\r\nimport Question from './Question';\r\nimport Result from './Result';\r\nimport './style.css';\r\n\r\n\r\n\r\n\r\nclass Quiz extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            questionList: QuestionGenerator(),\r\n            questionIndex: 0,\r\n            score:0\r\n        }\r\n        this.showContent= this.showContent.bind(this);\r\n        this.scoreQuestion = this.scoreQuestion.bind(this);\r\n    }\r\n\r\n    showContent(){\r\n        \r\n        if(this.state.questionIndex< this.state.questionList.length){\r\n            return<Question content = {this.state.questionList[this.state.questionIndex]} scoreQuestion={this.scoreQuestion}/> \r\n        }\r\n        return(\r\n            <Result score ={this.state.score}/>\r\n        )\r\n      \r\n    }\r\n    \r\n    scoreQuestion(value){\r\n        console.log('score is', value)\r\n        //grade answer\r\n       \r\n        //increase question index state\r\n        let question = this.state.questionList[this.state.questionIndex];\r\n        this.setState((state)=>{\r\n            return{...state.questionIndex++}\r\n        })\r\n         //increase state score\r\n         if(value ==question.Answer){\r\n            this.setState((state)=>{\r\n                return{...state.score++}\r\n            })\r\n             \r\n         }\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"whole\">\r\n                <div className=\"overlay\">\r\n\r\n             \r\n            <div className=\"question\">\r\n                <h1>Are you a foodie</h1>\r\n                {this.showContent()}\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Quiz;","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport Quiz from \"./components/Quiz\"\r\n\r\nReactDom.render(<Quiz/>, document.getElementById('root'))"],"sourceRoot":""}